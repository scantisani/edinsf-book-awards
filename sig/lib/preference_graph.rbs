class PreferenceGraph[T]
  def self.empty: [T]() -> PreferenceGraph[T]
  def self.with_paths: [T](Hash[T, Hash[T, Integer]]) -> PreferenceGraph[T]

  def path: (T, T) -> Integer
  def set_path: (T, T, strength: Integer) -> void
  def strengthen!: () -> PreferenceGraph[T]

  @paths: Hash[T, Hash[T, Integer]]

  private

  def initialize: (?Hash[T, Hash[T, Integer]]) -> void
  def nodes: () -> Array[T]

  attr_accessor paths: Hash[T, Hash[T, Integer]]
end
